    @page
    @model TraniningWebsiteFront.Pages.PagesTeacher.CreateCourseModel
    @{
        Layout = "_LayoutTeacher";
        ViewData["Title"] = "Создание курса";
    }

    <di class="create-course">
        <h2>Мой курс</h2>

        <!-- Форма для изменения заголовка -->
        <form method="post" id="courseForm" class="form">
            <h2 class="form">@Model.Course.Name</h2>
        <!-- Описание курса -->
            <div class="button-wrapper">
                <input type="text" asp-for="Course.Name" class="input-field" placeholder="Введите новое название" />
                <textarea asp-for="Course.Description" class="input-field" placeholder="Введите описание курса"></textarea>
                <button type="submit" class="btn btn-primary" onclick="confirmSubmit(event)">Создать курс</button>
            </div>

        </form>

        <div class="button-wrapper">
            <div class="button-wrapper">
                <!-- Измените ссылку на использование простого URL -->
                    <!-- Или если предпочитаете форму -->
                <form method="get" action="/PagesTeacher/CreateLecture">
                    <input type="hidden" name="courseId" value="@Model.Course.Id" />
                    <button type="submit">Добавить лекцию</button>
                </form>
                <form method="get" asp-page="/PagesTeacher/CreateQuiz">
                    <input type="hidden" name="courseId" value="@Model.Course.Id" />
                    <button type="submit">Добавить тест</button>
                </form>
            </div>
        </div>

        <div class="button-wrapper">
    <h2 class="lecture">Лекции</h2>

    <!-- Контейнер с лекциями -->
    @if (Model.Lectures != null && Model.Lectures.Any())
    {
        <div class="lectures-container">
            @foreach (var lecture in Model.Lectures)
            {
                <div class="lecture-card button-wrapper">
                    <h3>@lecture.Title</h3>
                    <p>@lecture.Content</p>
                </div>
            }
        </div>
    }
    else
    {
        <p>Пока нет лекций. Добавьте первую лекцию!</p>
    }
    </div>
    <div class="button-wrapper">
        <h2 class="lecture">Тесты</h2>

        <!-- Контейнер с лекциями -->
        @if (Model.Lectures != null && Model.Lectures.Any())
        {
            <div class="lectures-container">
                @foreach (var quiz in Model.Quizs)
                {
                    <div class="lecture-card button-wrapper">
                        <h3>@quiz.Title</h3>
                        <p>@quiz.Content</p>
                    </div>
                }
            </div>
        }
        else
        {
            <p>Пока нет тестов. Добавьте первый тест!</p>
        }
    </div>
</div>

    <script type="text/javascript">
        // Функция подтверждения перед отправкой формы
        function confirmSubmit(event) {
            var isConfirmed = confirm("Вы уверены, что хотите создать курс?");
            if (isConfirmed) {
                // Если пользователь подтвердил, отправляем форму
                document.getElementById("courseForm").submit();
            } else {
                event.preventDefault();
                // Если пользователь отменил, ничего не происходит
                alert("Создание курса отменено.");
            }
        }
    </script>

    <style>
        /*стили для заголовков*/
        .lecture, h2.form {
            text-align: left;
            border: 0;
            margin-top: 3px;
            margin-bottom: 3px;
        }

        /*стиль для формы*/
        .form {
            background-color: #f0cabe;
            padding: 10px;
            margin: 5px, 5px, 5px, 0;
            border: 2px solid #D4A6A6; /* Цвет рамки */
            border-radius: 10px;
        }

        /*стиль для блока лекций и тестов*/
        .button-wrapper{
            background-color: #f0cabe;
        
            padding: 10px;
            margin: 0, 5px, 5px, 0;
            border: 2px solid #D4A6A6; /* Цвет рамки */
            border-radius: 10px;
        }

        /* Стили для полей ввода */
        .input-field {
            width: 90%;
            padding: 10px;
            font-size: 16px;
            border: 2px solid #D4A6A6;
            border-radius: 12px;
            background-color: #FFF1F1;
            transition: border-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
            margin-bottom: 4px;
        }

            .input-field:focus {
                border-color: #F4A1A1;
                box-shadow: 0 0 10px rgba(244, 161, 161, 0.6);
                outline: none;
                transform: scale(1.03);
            }

        /* Стили для кнопок */
        button {
            margin-right: 10px;
            margin-bottom: 10px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            padding: 10px 20px;
            background-color: #D4A6A6;
            color: white;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            button:hover {
                background-color: #E7C3C3;
                transform: scale(1.05);
            }

            button:active {
                background-color: #F4A1A1;
                transform: scale(1);
            }
    </style>
